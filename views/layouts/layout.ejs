<!-- views/layout.ejs -->
<!DOCTYPE html>
<html lang="en" data-theme="light">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ToDo List App</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU6Zc6HfadeFoa6uFFSbfBeU4oc1UnXdOU7R3"
      crossorigin="anonymous"
    />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">
    <!-- Make sure this path matches your file structure -->
    <link rel="stylesheet" href="/css/style.css">
    <meta name="theme-color" content="#ffffff">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="default">
  </head>
  <body>
    <nav class="navbar navbar-expand-lg">
      <div class="container">
        <a class="navbar-brand" href="/">
          <i class="bi bi-check2-square"></i>
          <span>ToDo List</span>
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" 
                data-bs-target="#navbarNav" aria-controls="navbarNav" 
                aria-expanded="false" aria-label="Toggle navigation">
          <i class="bi bi-list"></i>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
          <ul class="navbar-nav ms-auto">
            <% if (typeof user !== 'undefined' && user) { %>
              <li class="nav-item">
                <a class="nav-link" href="/todos">Todos</a>
              </li>
              <li class="nav-item">
                <a class="nav-link" href="/dashboard">Dashboard</a>
              </li>
              <li class="nav-item">
                <a class="nav-link" href="/users/logout">Logout</a>
              </li>
            <% } else { %>
              <li class="nav-item">
                <a class="nav-link" href="/users/login">Login</a>
              </li>
              <li class="nav-item">
                <a class="nav-link" href="/users/register">Register</a>
              </li>
            <% } %>
            <li class="nav-item">
              <button class="theme-toggle btn" onclick="toggleTheme()">
                <i class="bi bi-moon-fill"></i>
              </button>
            </li>
          </ul>
        </div>
      </div>
    </nav>

    <main class="container mt-4 fade-in">
      <%- body %>
    </main>

    <!-- Toast Container -->
    <div class="toast-container position-fixed bottom-0 end-0 p-3">
      <% if(typeof success_msg !== 'undefined' && success_msg.length > 0) { %>
        <div class="toast-message" data-type="success" data-message="<%= success_msg %>"></div>
      <% } else if(typeof error_msg !== 'undefined' && error_msg.length > 0) { %>
        <div class="toast-message" data-type="error" data-message="<%= error_msg %>"></div>
      <% } %>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
      function toggleTheme() {
        const html = document.documentElement;
        const currentTheme = html.getAttribute('data-theme');
        const newTheme = currentTheme === 'light' ? 'dark' : 'light';
        
        html.setAttribute('data-theme', newTheme);
        localStorage.setItem('theme', newTheme);
        
        const icon = document.querySelector('.theme-toggle i');
        icon.className = newTheme === 'light' ? 'bi bi-moon-fill' : 'bi bi-sun-fill';
      }

      // Set initial theme
      const savedTheme = localStorage.getItem('theme') || 'light';
      document.documentElement.setAttribute('data-theme', savedTheme);
      const icon = document.querySelector('.theme-toggle i');
      icon.className = savedTheme === 'light' ? 'bi bi-moon-fill' : 'bi bi-sun-fill';

      // Replace isNewPageLoad function with shouldShowToast
      function shouldShowToast() {
        // Only show toast if navigation type is not "reload"
        return performance.navigation.type !== performance.navigation.TYPE_RELOAD;
      }

      function createToast(message, type = 'success') {
        const toastContainer = document.querySelector('.toast-container');
        const toast = document.createElement('div');
        toast.className = `toast show custom-toast toast-${type}`;
        toast.setAttribute('role', 'alert');
        toast.setAttribute('aria-live', 'assertive');
        toast.setAttribute('aria-atomic', 'true');

        const icons = {
          success: 'bi-check-circle-fill',
          error: 'bi-exclamation-circle-fill',
          warning: 'bi-exclamation-triangle-fill'
        };

        toast.innerHTML = `
          <div class="toast-content">
            <i class="bi ${icons[type]}"></i>
            <span class="toast-message">${message}</span>
            <button type="button" class="btn-close" aria-label="Close"></button>
          </div>
        `;

        toastContainer.appendChild(toast);

        // Add click event for close button
        const closeButton = toast.querySelector('.btn-close');
        closeButton.addEventListener('click', () => removeToast(toast));

        // Auto remove after 5 seconds
        setTimeout(() => removeToast(toast), 5000);
      }

      function removeToast(toast) {
        toast.classList.add('fade-out');
        setTimeout(() => toast.remove(), 300);
      }

      // Update the toast initialization logic
      document.addEventListener('DOMContentLoaded', function() {
        const shouldShow = shouldShowToast();
        const messages = document.querySelectorAll('.toast-message');
        
        messages.forEach(msg => {
          if (shouldShow) {
            createToast(msg.dataset.message, msg.dataset.type);
          }
          msg.remove();
        });
      });
    </script>
  </body>
</html>